{"version":3,"sources":["components/Song.js","components/Player.js","data.js","components/SongItem.js","components/SongList.js","components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["Song","props","className","src","currentSong","cover","alt","name","artist","Player","audioRef","useRef","useState","currentTime","duration","songInfo","setSongInfo","percentage","setPercentage","playSong","isPlaying","current","play","setIsPlaying","pause","timeUpdateHandler","e","target","Math","round","changeSong","index","songs","findIndex","item","id","setCurrentSong","timeFormat","time","floor","slice","useEffect","newSongs","map","active","setSongs","percentMove","transform","trackStyle","background","color","style","type","min","max","value","onChange","onClick","songIndex","length","onLoadedMetadata","onTimeUpdate","audio","ref","data","uuidv4","SongItem","song","selectedSong","filter","SongList","toggle","window","innerWidth","Nav","setToggle","class","App","appStyle","marginLeft","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5ec5617.chunk.js","sourcesContent":["import React, { } from 'react'\r\n\r\nconst Song = (props) => {\r\n  return (\r\n    <div className='song-container'>\r\n      <img src={props.currentSong.cover} alt=\"song-cover\"></img>\r\n      <div>\r\n      <h2>{props.currentSong.name}</h2>\r\n      <h3>{props.currentSong.artist}</h3>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Song;","import React, { useState, useRef } from 'react'\r\nimport { useEffect } from 'react'\r\n\r\nconst Player = (props) => {\r\n    const audioRef = useRef(null)\r\n    const [songInfo, setSongInfo] = useState({ currentTime: 0, duration: 0 })\r\n    const [percentage, setPercentage] = useState(0)\r\n\r\n    const playSong = () => {\r\n        if (props.isPlaying) {\r\n            audioRef.current.play();\r\n            props.setIsPlaying(!props.isPlaying);\r\n        }\r\n        else {\r\n            audioRef.current.pause();\r\n            props.setIsPlaying(!props.isPlaying);\r\n        }\r\n    }\r\n\r\n    const timeUpdateHandler = (e) => {\r\n        let currentTime = e.target.currentTime;\r\n        let duration = e.target.duration;\r\n        setPercentage(Math.round(currentTime/duration*100))\r\n        setSongInfo({ ...songInfo, currentTime: currentTime, duration: duration })\r\n        if (currentTime === duration) {\r\n            changeSong();\r\n            playSong();\r\n        }\r\n    }\r\n\r\n    const changeSong = () => {\r\n        let index = props.songs.findIndex((item) => item.id === props.currentSong.id)\r\n        props.setCurrentSong(props.songs[index+1])\r\n    }\r\n\r\n    const timeFormat = (time) => {\r\n            return Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    }\r\n\r\n    const handleDrag = (e) => {\r\n        audioRef.current.currentTime = e.target.value;\r\n    }\r\n\r\n    const handleBack = () => {\r\n        const songIndex = props.songs.findIndex((item) => item.id === props.currentSong.id)\r\n        if (songIndex === 0) {\r\n            props.setCurrentSong(props.songs[props.songs.length - 1])\r\n        }\r\n        else {\r\n            props.setCurrentSong(props.songs[songIndex - 1])\r\n        }\r\n    }\r\n\r\n    const handleNext = () => {\r\n        const songIndex = props.songs.findIndex((item) => item.id === props.currentSong.id)\r\n        if (songIndex === props.songs.length - 1) {\r\n            props.setCurrentSong(props.songs[0])\r\n        }\r\n        else {\r\n            props.setCurrentSong(props.songs[songIndex + 1])\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let newSongs = props.songs.map((item) => {\r\n            if (item.id === props.currentSong.id) {\r\n                return { ...item, active: true }\r\n            }\r\n            else {\r\n                return { ...item, active: false }\r\n            }\r\n        })\r\n        props.setSongs(newSongs)\r\n    }, [props.currentSong])\r\n\r\n    let percentMove = {transform: `translateX(${percentage}%)`}\r\n    let trackStyle = {background:`linear-gradient(to right, ${props.currentSong.color[0]}, ${props.currentSong.color[1]})`}\r\n\r\n    return (\r\n            <div className='player'>\r\n                <div className='time-control'>\r\n                    <p>{timeFormat(songInfo.currentTime)}</p>\r\n                    <div className='track' style={trackStyle}>\r\n                        <input type=\"range\" min={0} max={songInfo.duration || 0} value={songInfo.currentTime} onChange={handleDrag} />\r\n                        <div className='animate-track' style={percentMove}></div>\r\n                    </div>\r\n                    <p>{timeFormat(songInfo.duration)}</p>\r\n                </div>\r\n                <div className='play-control'>\r\n                    <i className=\"bi bi-skip-backward\" onClick={handleBack}></i>\r\n                    {props.isPlaying ? <i className=\"bi bi-play\" onClick={playSong}></i> : <i className=\"bi bi-pause-fill\" onClick={playSong}></i>}\r\n                    <i className=\"bi bi-skip-forward\" onClick={handleNext}></i>\r\n                </div>\r\n                <audio onLoadedMetadata={timeUpdateHandler} onTimeUpdate={timeUpdateHandler} src={props.currentSong.audio} ref={audioRef} />\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default Player;\r\n","import {v4 as uuidv4} from 'uuid'\r\n\r\nconst data = () => {\r\n    return (\r\n        [\r\n            {\r\n                name:'Time To Go',\r\n                cover:'https://songsara.net/wp-content/uploads/2021/08/Time-To-Go-400x400.jpg',\r\n                artist:'mell-ø, Ambulo',\r\n                audio:'https://dl.songsara.net/FRE/2021/10/mell-%C3%B8%20-%20Time%20To%20Go%20(2021)%20SONGSARA.NET/01%20Drift%20Away.mp3',\r\n                color:['#5069B7','#243023'],\r\n                id:uuidv4(),\r\n                active:true\r\n            },\r\n            {\r\n                name:'Early New Age',\r\n                cover:'https://songsara.net/wp-content/uploads/2021/08/Early-New-Age-Playlist-400x400.jpg',\r\n                artist:'Various Artists',\r\n                audio:'https://dl.songsara.net/FRE/2021/12/Early%20New%20Age%20(Playlist)/001%20Crystal%20Cathedral%20(Bonus%20Version%20Remastered).mp3',\r\n                color:['#1F1924', '#1D1B26'],\r\n                id:uuidv4(),\r\n                active:false\r\n            },\r\n            {\r\n                name:'Silk',\r\n                cover:'https://songsara.net/wp-content/uploads/2021/08/Felty-Iamalex-Silk-400x400.jpg',\r\n                artist:'Iamalex, Felty',\r\n                audio:'https://dl.songsara.net/FRE/2021/10/Iamalex%20-%20Silk%20(2021)%20SONGSARA.NET/01%20Summer%20Rain.mp3',\r\n                color:['#B9B1C4', '#CAB5A4'],\r\n                id:uuidv4(),\r\n                active:false\r\n            },\r\n            {\r\n                name:'Relax Edition 13',\r\n                cover:'https://songsara.net/wp-content/uploads/2021/08/Blank-And-Jones-Relax-Edition-13-400x400.jpg',\r\n                artist:'Blank & Jones',\r\n                audio:'https://dl.songsara.net/FRE/2021/10/Blank%20And%20Jones%20-%20Relax%20Edition%2013%20(2021)%20SONGSARA.NET/CD1/01%20Into%20the%20Sun.mp3',\r\n                color:['#678ED9','#CDDEF2'],\r\n                id:uuidv4(),\r\n                active:false\r\n            },\r\n            {\r\n                name:'Oasis',\r\n                cover:'https://songsara.net/wp-content/uploads/2021/08/Purrple-Cat-Oasis-400x400.jpg',\r\n                artist:'Purrple Cat',\r\n                audio:'https://dl.songsara.net/FRE/2021/10/Purrple%20Cat%20-%20Oasis%20(2021)%20SONGSARA.NET/01%20Heart%20of%20the%20Ocean.mp3',\r\n                color:['#DD5527','#2B6651'],\r\n                id:uuidv4(),\r\n                active:false,\r\n            }\r\n        ]\r\n    )\r\n}\r\n\r\n\r\nexport default data;","import React, { } from 'react'\r\n\r\nconst SongItem = (props) => {\r\n    const handleClick = () => {\r\n        const selectedSong = props.songs.filter((item) => item.id === props.song.id);\r\n        props.setCurrentSong(selectedSong[0]);\r\n        let newSongs = props.songs.map((item) => {\r\n            if (item.id === props.song.id) {\r\n                return {...item, active:true}\r\n            }\r\n            else {\r\n                return {...item, active:false}\r\n            }\r\n        })\r\n        props.setSongs(newSongs)\r\n    }\r\n    return (\r\n        <div className={`songItem-container ${props.song.active ? 'selectedItem' : ''}`} onClick={handleClick}>\r\n            <img src={props.song.cover} alt={props.song.name}></img>\r\n            <div>\r\n                <h4>{props.song.name}</h4>\r\n                <h5>{props.song.artist}</h5>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SongItem;","import React from 'react';\r\nimport SongItem from './SongItem';\r\n\r\nconst SongList = (props) => {\r\n    return (\r\n        <div className={`songList ${props.toggle ? '':'toggleList'}`}>\r\n            <div className='songListHeader'>{window.innerWidth >= 500 ? <h1>List of Songs</h1>:<h1></h1>}</div>\r\n            {props.songs.map((song) => <SongItem song={song} songs={props.songs} key={song.id} setSongs={props.setSongs} setCurrentSong={props.setCurrentSong}/>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SongList\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nconst Nav = (props) => {\r\n    const toggleButton = () => {\r\n        props.setToggle(!props.toggle)\r\n    }\r\n\r\n    return (\r\n        <div className='nav'>\r\n            <h1>Wave</h1>\r\n            <button onClick={toggleButton}>\r\n                <span>music list</span>\r\n                <i class=\"bi bi-music-note-list\"></i>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav","import React, {useState} from 'react'\nimport './styles/app.scss'\nimport Song from './components/Song';\nimport Player from './components/Player';\nimport data from './data';\nimport SongList from './components/SongList'\nimport Nav from './components/Nav';\n\nfunction App() {\n  const [songs, setSongs] = useState(data());\n  const [currentSong,setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(true);\n  const [toggle, setToggle] = useState(false);\n  \n  let appStyle;\n  if (toggle === true) {\n    if (window.innerWidth >= 768) {\n      appStyle = {...appStyle, marginLeft:\"20%\"}\n    }\n    else {\n      appStyle = {...appStyle, marginLeft:\"0\"} ;\n    }\n  }\n  else {\n    appStyle = {...appStyle, marginLeft:\"0\"} ;\n  }\n\n  return (\n    <div className=\"App\" style={appStyle}>\n      <Nav toggle={toggle} setToggle={setToggle} />\n      <Song currentSong={currentSong} />\n      <Player songs={songs} setSongs={setSongs} setCurrentSong={setCurrentSong} currentSong={currentSong} isPlaying={isPlaying} setIsPlaying={setIsPlaying} />\n      <SongList toggle={toggle} songs={songs} setCurrentSong={setCurrentSong} setSongs={setSongs}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}